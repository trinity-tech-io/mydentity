(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[321,368],{80950:function(){},46601:function(){},89214:function(){},8623:function(){},7748:function(){},85568:function(){},75992:function(){},78110:function(){},56619:function(){},77108:function(){},52361:function(){},94616:function(){},35466:function(e,t,n){Promise.resolve().then(n.bind(n,52623))},52623:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return I}});var r,o,i=n(45008),s=n(11920),a=n(26588);let c=null;async function d(e,t){let n=`${c.webServiceAPIEndpoint}/graphql`,r=window.location.toString(),o=await fetch(n,{method:"POST",headers:new Headers({"content-type":"application/json"}),body:JSON.stringify({query:"mutation CreateIntent($input: CreateIntentInput!) {\n    createIntent (input: $input) {\n      intentId\n    }\n  }",variables:{input:{type:e,redirectUrl:r,payload:t}}})}),i=(await o?.json()).data.createIntent.intentId||null;return console.log("intentId",i),i}function l(e,t){let n;switch(e){case o.REQUEST_CREDENTIALS:n="intent/request-credentials";break;case o.IMPORT_CREDENTIALS:n="intent/import-credentials";break;default:throw Error(`Unable to build front end intent endpoint for unknown intent type ${e}`)}return`${c.webServiceEndpoint}/${n}?rid=${t}`}(r=o||(o={})).REQUEST_CREDENTIALS="REQUEST_CREDENTIALS",r.IMPORT_CREDENTIALS="IMPORT_CREDENTIALS";let p={};async function u(){let e=function(){let e=new URL(window.location.href);return new URLSearchParams(e.search).get("rid")}();if(e){console.log("The DID web connector found an intent ID in the url - now processing the result");let t=await async function(e){let t=`${c.webServiceAPIEndpoint}/graphql`,n=`mutation ServerIntentResponse {
    serveIntentResponse (id: "${e}") {
      id type requestPayload responsePayload
    }
  }`,r=await fetch(t,{method:"POST",headers:new Headers({"content-type":"application/json"}),body:JSON.stringify({query:n})}),o=await r?.json();return o?.data?.serveIntentResponse}(e);if(console.log("response intent",t),!t)return void s.kg.warn("The DID web service has no info about the intent we've tried to process from the url. Skipping");!async function(e){let t=await p[e.type]?.(e);h?.(e.requestPayload.requestId,t)}(t)}}let h=null,w=()=>{try{return s.wF.getApplicationDID()}catch{return null}};class E{static registerResponseProcessors(){var e,t,n,r;e=o.REQUEST_CREDENTIALS,t=E.processRequestCredentialsResponse,p[e]=t,n=o.IMPORT_CREDENTIALS,r=E.processImportCredentialsResponse,p[n]=r}static async requestCredentials(e,t){let n={...t,caller:w(),requestId:e},r=await d(o.REQUEST_CREDENTIALS,n),i=l(o.REQUEST_CREDENTIALS,r);window.location.href=i}static async processRequestCredentialsResponse(e){return a.VerifiablePresentation.parse(e.responsePayload)}static async importCredentials(e,t,n){let r=w(),i={credentials:t.map(e=>e.toString()),options:n,caller:r,requestId:e},s=await d(o.IMPORT_CREDENTIALS,i),a=l(o.IMPORT_CREDENTIALS,s);window.location.href=a}static async processImportCredentialsResponse(e){return e.responsePayload.map(e=>({id:a.DIDURL.from(e)}))}}class m{constructor(e){this.name="didweb",c=Object.assign({},{webServiceEndpoint:"https://didweb.com",webServiceAPIEndpoint:"https://api.didweb.com"},e),this.registerResponseProcessors()}getWeb3Provider(){throw Error("Method not implemented.")}async getDisplayName(){return"DID Web Service"}registerResponseProcessors(){E.registerResponseProcessors()}registerResponseHandler(e){s.kg.log("Registered response handler on the web connector"),h=e,u()}requestCredentialsV2(e,t){return E.requestCredentials(e,t)}issueCredential(e,t,n,r,o){throw Error("Method not implemented.")}importCredentialsV2(e,t,n){return E.importCredentials(e,t,n)}deleteCredentials(e,t){throw Error("Method not implemented.")}signData(e,t,n){throw Error("Method not implemented.")}requestPublish(){throw Error("Method not implemented.")}updateHiveVaultAddress(e,t){throw Error("Method not implemented.")}importCredentialContext(e,t){throw Error("Method not implemented.")}generateAppIdCredential(e,t){throw Error("Method not implemented.")}generateHiveBackupCredential(e,t,n){throw Error("Method not implemented.")}pay(e){throw Error("Method not implemented.")}voteForDPoS(){throw Error("Method not implemented.")}voteForCRCouncil(){throw Error("Method not implemented.")}voteForCRProposal(){throw Error("Method not implemented.")}sendSmartContractTransaction(e){throw Error("Method not implemented.")}onBoard(e,t,n,r){throw Error("Method not implemented.")}}var f=n(2265),I=e=>{let{children:t}=e;return(0,f.useEffect)(()=>{let e=new m({webServiceEndpoint:"https://didweb.trinity-tech.io",webServiceAPIEndpoint:"https://didweb-service.trinity-tech.io"});return s.wF.registerConnector(e),s.wF.setApplicationDID("did:elastos:inDxwJsTKBbGkeSJZ5NPA6p8mb3F6i7ytA"),()=>{(0,i.N)()}}),t}},45008:function(e,t,n){"use strict";n.d(t,{N:function(){return o}});var r=n(11920);function o(){r.wF.getAvailableConnectors().forEach(e=>{console.log("Unregistering connector ".concat(e.name)),r.wF.unregisterConnector(e.name)})}}},function(e){e.O(0,[990,988,787,443,218,18,431,971,596,744],function(){return e(e.s=35466)}),_N_E=e.O()}]);